(define a 100)
この行でaに100が代入される。
(define b 1)
この行でbに1が代入される。
この下の行からlet式が始まる。
すなわち、上の2行が最も外側のフレーム(0)で、下の行から内側のフレームへと入る。

(let ((a 10)
      (b (+ a 1))
      (c (- b 1)))
ここは、let式で定義された内側フレーム(1)の環境づくりの部分である。
初めの行で、aに10が代入される。
その次の行で、bに(a+1)が代入されるが、ここでaの値は外側のフレームのaの値、すなわち、100である。
よって、bに101が代入される。
その次の行も同様で、外側のフレームのbの値を使った計算結果が代入され、cには1-1、すなわち0が代入される。
よって、(0)の内側フレーム(1)は、a->10, b->101, c->0となっている。
  (let ((a c)
        (b (+ a 1))
この2行でさらに内側のフレーム(2)が作られる。
aにフレーム(1)のcの値、すなわち、0が代入される。
bには同様に、11が代入される。
        (c (let ((b 9))
             (- b a)))
この2行では新しくフレームが作られているが、これはフレーム(2)の内側ではなく、フレーム(1)の内側のフレームである。
なぜなら、フレーム(2)がまだ閉じられていないからである。
このフレームをフレーム(3)とする。
フレーム(3)では、b->9となっている。
このフレームの中で、(- b a)が評価されると、bは9であり、aは内側のフレーム、すなわち、フレーム(1)のaの値、10となる。
よって、(- b a)は、-1となる。
そのあと、フレーム(3)が消える。
そして、フレーム(2)のcの値に9が代入される。
)
この)で、フレーム(2)が形成される。
最終的なフレーム(2)は、a->0, b->11, c->-1となっている。
    (+ a b c)
この評価はフレーム(2)の中で行われている。
よって、フレーム(2)の値が使われ、結果は10となる。
))
この2行は残りの()である。
最初の行で、フレーム(2)が消え、
次の行で、フレーム(1)が消える。

このようにフレーム(0)〜フレーム(3)が増減する事で、逐次的に実行される。
